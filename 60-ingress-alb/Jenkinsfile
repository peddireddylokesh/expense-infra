pipeline {
    agent {
        label 'AGENT-1'
    }

    options {
        timeout(time: 40, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    environment {
        ACTION = "${params.ACTION}"  // ‚úÖ Make Jenkins parameter available in shell
    }

    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select Terraform action')
    }

    stages {
        stage('Init') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-credentials') {
                    dir('60-ingress-alb') {
                        sh '''
                            echo "üîß Running terraform init..."
                            terraform init -reconfigure 
                        '''
                    }
                }
            }
        }

        stage('Plan and Apply/Destroy') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-credentials') {
                    dir('60-ingress-alb') {
                        sh """
                            if [ ${params.ACTION} = 'apply' ]; then
                                echo "üìù Running terraform plan..."
                                terraform plan -out=tfplan
                                echo "üöÄ Applying terraform changes..."
                                terraform apply -auto-approve tfplan
                            elif [ ${params.ACTION} = 'destroy' ]; then
                                echo "üí£ Destroying infrastructure..."
                                terraform destroy -auto-approve
                            fi
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            deleteDir()
        }
        success {
            echo '‚úÖ Pipeline completed successfully.'
        }
        failure {
            echo '‚ùå Pipeline failed.'
        }
        unstable {
            echo '‚ö†Ô∏è Pipeline was unstable.'
        }
    }
}
