pipeline {
    agent { label 'AGENT-1' }

    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select Terraform action')
        string(name: 'APPLY_DIR', defaultValue: '80-cdn', description: 'Directory to run terraform apply')
    }

    environment {
        AWS_REGION = 'us-east-1'
        DESTROY_MODULES = '70-ingress-alb,60-acm,50-ecr,40-rds,40-eks,20-bastion,10-sg,00-vpc'
    }

    stages {
        stage('Init and Plan') {
            when {
                expression { params.ACTION == 'apply' }
            }
            steps {
                dir("${params.APPLY_DIR}") {
                    withAWS(region: "${env.AWS_REGION}", credentials: 'aws') {
                        sh 'terraform init -reconfigure'
                        sh 'terraform validate'
                        sh 'terraform plan -out=tfplan'
                    }
                }
            }
        }

        stage('Apply or Destroy') {
            steps {
                script {
                    if (params.ACTION == 'apply') {
                        dir("${params.APPLY_DIR}") {
                            withAWS(region: "${env.AWS_REGION}", credentials: 'aws') {
                                sh 'terraform apply -auto-approve tfplan'
                            }
                        }
                    } else if (params.ACTION == 'destroy') {
                        def modules = env.DESTROY_MODULES.split(',')

                        for (module in modules) {
                            dir("${module}") {
                                echo "Destroying module: ${module}"
                                withAWS(region: "${env.AWS_REGION}", credentials: 'aws') {
                                    sh 'terraform init -reconfigure'
                                    sh 'terraform destroy -auto-approve'
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }

        success {
            echo "Terraform ${params.ACTION} completed successfully."
        }

        failure {
            echo "Terraform ${params.ACTION} failed. Check the logs for more details."
        }
    }
}
