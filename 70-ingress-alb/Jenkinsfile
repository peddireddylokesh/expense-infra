pipeline {
    agent {
        label 'AGENT-1'
    }
    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    parameters {
    
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'select terraform action')
    }
    stages {                               
        stage('Init and Plan') {
             steps {
                withAWS(region: 'us-east-1', credentials: 'aws-credentials') {
                    sh '''
                    cd 70-ingress-alb
                    terraform init -reconfigure
                    terraform plan -out=tfplan
                    '''
                }
            } 
        }
    
        stage('Apply') {
           
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-credentials') {                 
                    sh """
                        cd 70-ingress-alb
                        terraform apply -auto-approve
                    """
                    
                }
            } 
        } 
        stage('Destroy infra') {
           
            steps {
                script{
                    withAWS(region: 'us-east-1', credentials: 'aws-credentials') {                 
                       def list = ["60-acm","50-ecr","40-eks","40-rds","20-bastion","10-sg","00-vpc"]
                        for(item in list){
                            sh """
                                cd ${item}
                                terraform init -reconfigure
                                terraform destroy -auto-approve
                            """
                            echo "Destroyed infra in ${item}"
                        }
                    }
                }
            } 
        } 
        
    }
       

    post {
        always {
            echo 'This will always run'     
            deleteDir()
        }
        success {
            echo 'This will run only if the pipeline is successful'
        }
        failure {
            echo 'This will run only if the pipeline fails'
        }
        unstable {
            echo 'This will run only if the pipeline is unstable'
        }
    }
}