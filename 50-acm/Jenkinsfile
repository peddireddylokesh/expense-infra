pipeline {
    agent {
        label 'AGENT-1'
    }
    options{
        timeout(time: 40, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    // environment {
    //     DEBUG = 'true'
    // }

    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select Action')
    }

    environment {
        TF_DIR = "${WORKSPACE}/50-acm"
    }
    stages {
        stage('Init and Plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-credentials') {
                    dir("${env.TF_DIR}") {
                        sh '''
                            echo "ðŸ”§ Running terraform init..."
                            terraform init -reconfigure
                        '''
                    }
                }
            }
        }

        stage('Apply or Destroy') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-credentials') {
                    dir("${env.TF_DIR}") {
                         script {
                            if (params.ACTION == 'apply') {
                                sh '''
                                    echo "ðŸš€ Running terraform plan & apply..."
                                    terraform plan -out=tfplan
                                    terraform apply -auto-approve tfplan
                                '''
                            } else if (params.ACTION == 'destroy') {
                                sh '''
                                    echo "ðŸ”¥ Running terraform destroy..."
                                    terraform destroy -auto-approve
                                '''
                            }
                        }
                    }
                    
                }
            }
        }
    }

    post {
        always{
            echo "This sections runs always"
            deleteDir()
        }
        success{
            echo "This section run when pipeline success"
        }
        failure{
            echo "This section run when pipeline failure"
        }
    }
}